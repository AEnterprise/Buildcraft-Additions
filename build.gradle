buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
 
apply plugin: 'forge'
 
ext.buildProps = file "build.properties"
 
buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}
 
version = "${config.version.mod}"
group= "com.AEnterprise.BuildcraftAdditions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BuildcraftAdditions-1.7.10"
 
minecraft {
    version = "${config.version.mc}-${config.version.forge}"
    runDir = "eclipse"
    replace "@MODVERSION@", config.version.mod
}
 
dependencies {
    compile project("Eureka")
    compile 'com.mod-buildcraft:buildcraft:6.0.18:dev'  // adds buildcraft to the dev env
    
 
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}
 
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
 
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

jar {
    manifest {
        attributes (['FMLCorePlugin': 'buildcraftAdditions.preloader.BCALoadingPlugin', 'FMLCorePluginContainsFMLMod': 'true'])
    }
}

assemble.dependsOn deobfJar
